name: gds
# either manually started, or on a schedule
on: [ push, workflow_dispatch ]
jobs:
  gds:
    env:
      OPENLANE_TAG: 4a4de6ab426c8e53ae9534fdba2366a863a5af7e
      SKY130_PDK_VERSION: 12df12e2e74145e31c5a13de02f9a1e176b56e67
      PYTHONIOENCODING: utf-8

    # ubuntu
    runs-on: ubuntu-latest
    steps:
    # need the repo checked out
    - name: checkout repo
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: checkout tt-multiplexer repo
      uses: actions/checkout@v3
      with:
        repository: tinytapeout/tt-multiplexer
        path: tt-multiplexer

    - name: Patch tt-multiplexer
      working-directory: tt-multiplexer
      run: |
        git apply ../patches/tt_top_no_xor.patch

    - name: checkout tt-support-tools repo
      uses: actions/checkout@v3
      with:
        repository: tinytapeout/tt-support-tools
        path: tt
        ref: tt04

    - name: checkout openlane2 repo
      uses: actions/checkout@v3
      with:
        repository: efabless/openlane2
        path: openlane2
        ref: ${{ env.OPENLANE_TAG }}

    - name: patch OpenLane 2
      working-directory: openlane2
      run: |
        git apply ../patches/openlane2.patch

    # Set Python up
    - name: setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    - run: pip install -r tt-multiplexer/py/requirements.txt -r tt/requirements.txt

    # Install yosys (required for tt/configure.py)
    - name: install oss-cad-suite
      uses: YosysHQ/setup-oss-cad-suite@v2
      with:
          version: '2023-05-27'
          github-token: ${{ secrets.GITHUB_TOKEN }}
   
    - name: Fetch user project, update caravel configuration
      run: python ./tt/configure.py --clone-all --fetch-gds --update-caravel
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: cachix/install-nix-action@v20
      
    - uses: cachix/cachix-action@v12
      with:
        name: openlane
        extraPullNames: openlane

    - name: Install Sky130 PDK
      run: |
        pip3 install volare
        volare enable --pdk sky130 ${{ env.SKY130_PDK_VERSION }}

#    - name: uncompress gds files
#      run: gunzip -v gds/*.gds.gz

    - name: Generate sources from user macro configuration
      run: make gen-module-placement

    # run OpenLane to build the GDS
    - name: Harden tt_ctrl
      working-directory: tt-multiplexer/ol2/tt_ctrl
      run: nix-shell $GITHUB_WORKSPACE/openlane2/shell.nix --run "python build.py"      

    - name: Harden tt_mux
      working-directory: tt-multiplexer/ol2/tt_mux
      run: nix-shell $GITHUB_WORKSPACE/openlane2/shell.nix --run "python build.py"

    - name: Copy macros
      run: |
        make copy-macros
        cp verilog/rtl/tt_um_*.v tt-multiplexer/ol2/tt_top/verilog

    - name: Harden tt_top
      working-directory: tt-multiplexer/ol2/tt_top
      run: nix-shell $GITHUB_WORKSPACE/openlane2/shell.nix --run "python build.py"

    - name: Copy final results
      run: make copy-final-results

    - name: upload GDS artifact
      uses: actions/upload-artifact@v3
      with:
          name: GDS
          path: tt-multiplexer/ol2/tt_top/runs/RUN_*/*

    - name: upload macros artifact
      uses: actions/upload-artifact@v3
      with:
          name: macros
          path: |
            gds/*
            lef/*
            spef/*
            verilog/gl/*
