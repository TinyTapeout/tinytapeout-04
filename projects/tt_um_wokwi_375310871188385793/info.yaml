--- 
# TinyTapeout project information
project:
  wokwi_id:    375310871188385793        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
#  source_files:        
#    - counter.v
#    - decoder.v
#  top_module:  "tt_um_example"      # Put the name of your top module here, must start with "tt_um_". Make it unique by including your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1"    # Valid values: 1x1, 1x2, 2x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation: 
  author:       "Piotr Kuligowski"      # Your name
  title:        "Simple QSPI DAC"      # Project title
  language:     "Wokwi" # other examples include Verilog, Amaranth, VHDL, etc
  description:  "Simple implementation of 8-bit R-2R DAC using QSPI interface + bi-directional port test breakout."      # Short description of what your project does

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
      After reset, it is a very simple QSPI-based, 8-bit DAC (digital to analog converter). You feed it with 4-bit halves,
      which are then read on each rising edge of CLK.
      It also breakouts UIO's pins to test it externally (delays, electrical characteristics, etc).

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      After power up set nCS high, set RST_N low, then set RST_N high.
      If you want to set a new DAC value, first set nCS low, then set 4-bits, beginning from the lowest half. 
      Now trigger a rising edge of CLK, set highest 4-bits and trigger another rising edge of CLK. 
      Now you can continue setting next bytes (divided into 4-bit halves) or set nCS high and start from the beginning, by setting nCS low.
      You can observe effects on the 7seg display or remove it and implement R-2R network to have the acutal DAC.
      There is also a break out of bi-directional ports to test them externally.

# A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:               
    - DATA0
    - DATA1
    - DATA2
    - DATA3
    - nCS
    - none
    - none
    - none
# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - OUT0
    - OUT1
    - OUT2
    - OUT3
    - OUT4
    - OUT5
    - OUT6
    - OUT7
# A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - INTERMEDIATE0
    - INTERMEDIATE1
    - INTERMEDIATE2
    - INTERMEDIATE3
    - TESTED_UIO
    - TESTED_UIO_IN
    - TESTED_UIO_OUT
    - TESTED_UIO_OE

# The following fields are optional
  tag:          "experiment"      # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  "To test the DAC you need to remove 7seg display and connect external R-2R network to implement DAC."      # Describe any external hardware needed
  discord:      "pkuligowski#9674"      # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     0       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository (must be 512kb or less)
