---
# TinyTapeout project information
project:
  wokwi_id: 0 # If using wokwi, set this to your project's ID

  # If using an HDL, set wokwi_id as 0 and uncomment and list your source files here.
  # Source files must be in ./src and you must list each source file separately
  source_files:
    - tt_um_led_multiplexer_display.v
    - multiplexer_display.v
  top_module: "tt_um_led_multiplexer_display" # put the name of your top module here, make it unique by prepending your github username

  # How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1" # Valid values: 1x1, 1x2, 2x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation:
  author: "Baciu Florin-George | BFG-e"
  title: "Led Multiplexer Display"
  language: "Verilog"
  description: "Stores 4 characters and displays them on a 16x4 led matrix"

  # Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
    If the load is high, the design will load the specified hex char(input data pins) at the specified location in memory (input char position), therwise the design will go trough the display columns and represent the chars using the internal character map.
    The design should be reseted before use
  # Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test: Use the input data to add chars to the internal memory.

  # A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:
    - input data 0
    - input data 1
    - input data 2
    - input data 3
    - input char position 0
    - input char position 1
    - load
    - not used

  # A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - active column number 0
    - active column number 1
    - active column number 2
    - active column number 3
    - line output 0
    - line output 1
    - line output 2
    - line output 3
  # A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - not used
    - not used
    - not used
    - not used
    - not used
    - not used
    - not used
    - not used

  # The following fields are optional
  tag: "experiment, test" # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw: "16x4 led matrix" # Describe any external hardware needed
  discord: "bfge" # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link: "" # URL to longer form documentation, eg the README.md in your repository
  clock_hz: 100 # Clock frequency in Hz (if required)
  picture: "" # relative path to a picture in your repository
