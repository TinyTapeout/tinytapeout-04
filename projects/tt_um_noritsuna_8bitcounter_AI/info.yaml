--- 
# TinyTapeout project information
project:
  wokwi_id:    0        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
  source_files:        
    - tt_um_noritsuna_8bitcounter_AI.v
  top_module:  "tt_um_noritsuna_8bitcounter_AI"      # put the name of your top module here, make it unique by prepending your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1"    # Valid values: 1x1, 1x2, 2x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation: 
  author:       "Noritsuna Imamura"
  title:        "8bits Counter by AI"
  language:     "Verilog"
  description:  "This verilog code is generated by LLaMa2 on PC."

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
    This is a simple 8bits counter. This was generated automatically by an Edge AI. Its EdgeAI environment is that of https://github.com/noritsuna/Edge_Circuit_Designer .
  Prompt: |
    Please generate a 8 bits counter in verilog with the following conditions. The argument to be used are input wire [7:0] ui_in, output wire [7:0] uo_out, input  wire [7:0] uio_in, output wire [7:0] uio_out, output wire [7:0] uio_oe, input wire ena, input wire clk, input wire rst_n. The counter variable shall be reg [7:0] count. reg [7:0] count is assign to output wire [7:0] uo_out. The input should only be count. The output should only be count. Count up the count variable by increasing the count variable by 1. The module name is tt_um_noritsuna_8bitcounter_AI.

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
    Check reset, ena, counter function.

# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - counter bit 0
    - counter bit 1
    - counter bit 2
    - counter bit 3
    - counter bit 4
    - counter bit 5
    - counter bit 6
    - counter bit 7

# The following fields are optional
  tag:          "AI, counter"      # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  ""      # Describe any external hardware needed
  discord:      "noritsuna"      # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     10000000       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository
